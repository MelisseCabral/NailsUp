__d(function (global, require, module, exports, _dependencyMap) {
  var _jsxFileName = "/home/melisse/Documents/nailsUp/node_modules/react-native-scrollable-tab-view/DefaultTabBar.js";

  var React = require(_dependencyMap[0], "react");

  var _ReactNative = ReactNative = require(_dependencyMap[1], "react-native"),
      ViewPropTypes = _ReactNative.ViewPropTypes;

  var PropTypes = require(_dependencyMap[2], "prop-types");

  var createReactClass = require(_dependencyMap[3], "create-react-class");

  var _ReactNative2 = ReactNative,
      StyleSheet = _ReactNative2.StyleSheet,
      Text = _ReactNative2.Text,
      View = _ReactNative2.View,
      Animated = _ReactNative2.Animated;

  var Button = require(_dependencyMap[4], './Button');

  var DefaultTabBar = createReactClass({
    displayName: "DefaultTabBar",
    propTypes: {
      goToPage: PropTypes.func,
      activeTab: PropTypes.number,
      tabs: PropTypes.array,
      backgroundColor: PropTypes.string,
      activeTextColor: PropTypes.string,
      inactiveTextColor: PropTypes.string,
      textStyle: Text.propTypes.style,
      tabStyle: ViewPropTypes.style,
      renderTab: PropTypes.func,
      underlineStyle: ViewPropTypes.style
    },
    getDefaultProps: function getDefaultProps() {
      return {
        activeTextColor: 'navy',
        inactiveTextColor: 'black',
        backgroundColor: null
      };
    },
    renderTabOption: function renderTabOption(name, page) {},
    renderTab: function renderTab(name, page, isTabActive, onPressHandler) {
      var _props = this.props,
          activeTextColor = _props.activeTextColor,
          inactiveTextColor = _props.inactiveTextColor,
          textStyle = _props.textStyle;
      var textColor = isTabActive ? activeTextColor : inactiveTextColor;
      var fontWeight = isTabActive ? 'bold' : 'normal';
      return React.createElement(
        Button,
        {
          style: {
            flex: 1
          },
          key: name,
          accessible: true,
          accessibilityLabel: name,
          accessibilityTraits: "button",
          onPress: function onPress() {
            return onPressHandler(page);
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 43
          }
        },
        React.createElement(
          View,
          {
            style: [styles.tab, this.props.tabStyle],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 51
            }
          },
          React.createElement(
            Text,
            {
              style: [{
                color: textColor,
                fontWeight: fontWeight
              }, textStyle],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 52
              }
            },
            name
          )
        )
      );
    },
    render: function render() {
      var _this = this;

      var containerWidth = this.props.containerWidth;
      var numberOfTabs = this.props.tabs.length;
      var tabUnderlineStyle = {
        position: 'absolute',
        width: containerWidth / numberOfTabs,
        height: 4,
        backgroundColor: 'navy',
        bottom: 0
      };
      var translateX = this.props.scrollValue.interpolate({
        inputRange: [0, 1],
        outputRange: [0, containerWidth / numberOfTabs]
      });
      return React.createElement(
        View,
        {
          style: [styles.tabs, {
            backgroundColor: this.props.backgroundColor
          }, this.props.style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75
          }
        },
        this.props.tabs.map(function (name, page) {
          var isTabActive = _this.props.activeTab === page;
          var renderTab = _this.props.renderTab || _this.renderTab;
          return renderTab(name, page, isTabActive, _this.props.goToPage);
        }),
        React.createElement(Animated.View, {
          style: [tabUnderlineStyle, {
            transform: [{
              translateX: translateX
            }]
          }, this.props.underlineStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 81
          }
        })
      );
    }
  });
  var styles = StyleSheet.create({
    tab: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      paddingBottom: 10
    },
    tabs: {
      height: 50,
      flexDirection: 'row',
      justifyContent: 'space-around',
      borderWidth: 1,
      borderTopWidth: 0,
      borderLeftWidth: 0,
      borderRightWidth: 0,
      borderColor: '#ccc'
    }
  });
  module.exports = DefaultTabBar;
});
__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/melisse/Documents/nailsUp/node_modules/react-native-material-cards/Card.js";

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Card: {
      displayName: "Card"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/melisse/Documents/nailsUp/node_modules/react-native-material-cards/Card.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var Card = _wrapComponent("Card")(function (_Component) {
    _inherits(Card, _Component);

    function Card(props) {
      _classCallCheck(this, Card);

      var _this = _possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).call(this, props));

      _this.state = {
        calc_offset_height: 0
      };
      return _this;
    }

    _createClass(Card, [{
      key: "renderChildren",
      value: function renderChildren() {
        var _this2 = this;

        var returnChildren = this.props.children;

        if (returnChildren.length > 0 && returnChildren[0].type.name === "CardTitle") {
          returnChildren = _react3.default.Children.map(returnChildren, function (child) {
            if (child.type.name === "CardTitle") {
              return _react3.default.cloneElement(child, {
                style: _extends({}, child.props.style, {
                  paddingTop: 24
                })
              });
            } else {
              return child;
            }
          });
        }

        if (returnChildren.length > 0 && returnChildren[0].type.name === "CardImage") {
          returnChildren = _react3.default.Children.map(returnChildren, function (child) {
            if (child.type.name === "CardImage") {
              return _react3.default.cloneElement(child, {
                style: _extends({}, child.props.style, {
                  borderTopLeftRadius: 2,
                  borderTopRightRadius: 2
                })
              });
            } else {
              return child;
            }
          });
        }

        if (returnChildren.length >= 2 && returnChildren.map(function (child) {
          return child.type.name;
        }).join("").includes("CardImageCardTitle")) {
          returnChildren = _react3.default.Children.map(returnChildren, function (child) {
            if (child.type.name === "CardImage") {
              return _react3.default.cloneElement(child, {
                style: _extends({}, child.props.style, {
                  marginBottom: 0
                })
              });
            } else {
              return child;
            }
          });
        }

        if (returnChildren.length >= 2 && returnChildren.map(function (child) {
          return child.type.name;
        }).join("").includes("CardImageCardAction")) {
          returnChildren = _react3.default.Children.map(returnChildren, function (child) {
            if (child.type.name === "CardImage") {
              return _react3.default.cloneElement(child, {
                style: _extends({}, child.props.style, {
                  marginBottom: 0
                })
              });
            } else {
              return child;
            }
          });
        }

        if (this.props.avatarSource !== undefined && (returnChildren.map(function (child) {
          return child.type.name;
        }).includes("CardTitle") || returnChildren.map(function (child) {
          return child.type.name;
        }).includes("CardContent"))) {
          var title_index = returnChildren.map(function (child) {
            return child.type.name;
          }).indexOf("CardTitle");
          var content_index = returnChildren.map(function (child) {
            return child.type.name;
          }).indexOf("CardContent");
          var to_index = void 0;

          if (title_index === -1) {
            to_index = content_index;
          } else if (content_index === -1) {
            to_index = title_index;
          } else {
            to_index = title_index > content_index ? content_index : title_index;
          }

          returnChildren = _react3.default.Children.map(returnChildren, function (child, index) {
            if (index === to_index) {
              return _react3.default.cloneElement(child, {
                avatarSource: _this2.props.avatarSource
              });
            } else {
              return child;
            }
          });
        }

        if (this.props.mediaSource !== undefined || this.props.isDark) {
          returnChildren = _react3.default.Children.map(returnChildren, function (child) {
            if (child.type.name === "CardContent" || child.type.name === "CardTitle" || child.type.name === "CardAction") {
              return _react3.default.cloneElement(child, {
                isDark: true
              });
            } else {
              return child;
            }
          });
        }

        return returnChildren;
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var newStyle = this.props.style || {};

        if (this.props.mediaSource !== undefined) {
          return _react3.default.createElement(
            _reactNative.Image,
            {
              borderRadius: 2,
              source: this.props.mediaSource,
              resizeMode: "stretch",
              style: [styles.mediaContainer, styles.mediaCard, newStyle],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 117
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              {
                style: [styles.mediaInsetContainer, {
                  marginTop: this.state.calc_offset_height
                }],
                onLayout: function onLayout(e) {
                  _this3.setState({
                    calc_offset_height: e.nativeEvent.layout.width - e.nativeEvent.layout.height
                  });
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 118
                }
              },
              this.renderChildren()
            )
          );
        } else {
          return _react3.default.createElement(
            _reactNative.View,
            {
              style: [styles.container, styles.card, newStyle],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 126
              }
            },
            this.renderChildren()
          );
        }
      }
    }]);

    return Card;
  }(_react2.Component));

  exports.default = Card;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      alignItems: 'flex-start',
      backgroundColor: '#F5FCFF',
      justifyContent: 'flex-start',
      margin: 5
    },
    mediaContainer: {
      flex: 1,
      flexDirection: 'column',
      alignItems: 'stretch',
      justifyContent: 'flex-start',
      margin: 5
    },
    mediaInsetContainer: {
      backgroundColor: "#00000070",
      flex: 1,
      flexDirection: 'column',
      alignItems: 'stretch',
      justifyContent: 'flex-end',
      borderBottomLeftRadius: 2,
      borderBottomRightRadius: 2
    },
    card: {
      backgroundColor: "#fff",
      borderRadius: 2,
      shadowColor: "#000000",
      shadowOpacity: 0.3,
      shadowRadius: 1,
      shadowOffset: {
        height: 1,
        width: 0.3
      }
    },
    mediaCard: {
      borderRadius: 2,
      shadowColor: "#000000",
      shadowOpacity: 0.3,
      shadowRadius: 1,
      shadowOffset: {
        height: 1,
        width: 0.3
      }
    }
  });
});
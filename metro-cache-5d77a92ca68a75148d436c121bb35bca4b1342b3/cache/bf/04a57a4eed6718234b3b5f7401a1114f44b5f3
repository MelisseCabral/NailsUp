__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/melisse/Documents/nailsUp/node_modules/react-native-material-cards/CardContent.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    CardContent: {
      displayName: "CardContent"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/melisse/Documents/nailsUp/node_modules/react-native-material-cards/CardContent.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var CardContent = _wrapComponent("CardContent")(function (_Component) {
    _inherits(CardContent, _Component);

    function CardContent() {
      _classCallCheck(this, CardContent);

      return _possibleConstructorReturn(this, (CardContent.__proto__ || Object.getPrototypeOf(CardContent)).apply(this, arguments));
    }

    _createClass(CardContent, [{
      key: "render",
      value: function render() {
        var newStyle = this.props.style || {};
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: [styles.cardContent, newStyle],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 13
            }
          },
          this.props.avatarSource !== undefined && _react3.default.createElement(_reactNative.Image, {
            source: this.props.avatarSource,
            resizeMode: "stretch",
            style: styles.avatarStyle,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 15
            }
          }),
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.CardContentTextCont,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 17
              }
            },
            this.props.text !== undefined ? _react3.default.createElement(
              _reactNative.Text,
              {
                style: this.props.isDark ? [styles.contentText, styles.lightText] : styles.contentText,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 18
                }
              },
              this.props.text
            ) : this.props.children
          )
        );
      }
    }]);

    return CardContent;
  }(_react2.Component));

  exports.default = CardContent;

  var styles = _reactNative.StyleSheet.create({
    darkText: {
      color: 'rgba(0 ,0 ,0 , 0.87)'
    },
    lightText: {
      color: 'rgba(255 ,255 ,255 , 0.87)'
    },
    cardContent: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'flex-start',
      paddingRight: 16,
      paddingLeft: 16,
      paddingBottom: 16
    },
    CardContentTextCont: {
      flex: 1,
      flexDirection: 'column'
    },
    contentText: {
      fontSize: 14,
      color: 'rgba(0 ,0 ,0 , 0.54)'
    },
    avatarStyle: {
      width: 40,
      height: 40,
      borderRadius: 150,
      marginRight: 16
    }
  });
});
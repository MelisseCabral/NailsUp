__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/melisse/Documents/nailsUp/Screens/Services.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _FontAwesome = require(_dependencyMap[3], "@expo/vector-icons/FontAwesome");

  var _FontAwesome2 = _interopRequireDefault(_FontAwesome);

  var _reactNavigation = require(_dependencyMap[4], "react-navigation");

  var _reactNativeMaterialCards = require(_dependencyMap[5], "react-native-material-cards");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Services: {
      displayName: "Services"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/melisse/Documents/nailsUp/Screens/Services.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var Services = _wrapComponent("Services")(function (_React$Component) {
    _inherits(Services, _React$Component);

    function Services() {
      _classCallCheck(this, Services);

      return _possibleConstructorReturn(this, (Services.__proto__ || Object.getPrototypeOf(Services)).apply(this, arguments));
    }

    _createClass(Services, [{
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: styles.container,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 10
            }
          },
          _react3.default.createElement(
            _reactNativeMaterialCards.Card,
            {
              style: styles.serviceCard,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 11
              }
            },
            _react3.default.createElement(_reactNativeMaterialCards.CardTitle, {
              title: "This is a title",
              subtitle: "This is subtitle",
              __source: {
                fileName: _jsxFileName,
                lineNumber: 12
              }
            })
          ),
          _react3.default.createElement(
            _reactNativeMaterialCards.Card,
            {
              style: styles.serviceCard,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 17
              }
            },
            _react3.default.createElement(_reactNativeMaterialCards.CardContent, {
              text: "Your device will reboot in few seconds once successful, be patient meanwhile",
              __source: {
                fileName: _jsxFileName,
                lineNumber: 18
              }
            }),
            _react3.default.createElement(
              _reactNativeMaterialCards.CardAction,
              {
                separator: true,
                inColumn: false,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 19
                }
              },
              _react3.default.createElement(_reactNativeMaterialCards.CardButton, {
                onPress: function onPress() {},
                title: "Push",
                color: "blue",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 22
                }
              }),
              _react3.default.createElement(_reactNativeMaterialCards.CardButton, {
                onPress: function onPress() {},
                title: "Later",
                color: "blue",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 27
                }
              })
            )
          ),
          _react3.default.createElement(
            _reactNativeMaterialCards.Card,
            {
              style: styles.serviceCard,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 34
              }
            },
            _react3.default.createElement(_reactNativeMaterialCards.CardContent, {
              text: "Your device will reboot in few seconds once successful, be patient meanwhile",
              __source: {
                fileName: _jsxFileName,
                lineNumber: 35
              }
            }),
            _react3.default.createElement(
              _reactNativeMaterialCards.CardAction,
              {
                separator: true,
                inColumn: false,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 36
                }
              },
              _react3.default.createElement(_reactNativeMaterialCards.CardButton, {
                onPress: function onPress() {},
                title: "Push",
                color: "blue",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 39
                }
              }),
              _react3.default.createElement(_reactNativeMaterialCards.CardButton, {
                onPress: function onPress() {},
                title: "Later",
                color: "blue",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 44
                }
              })
            )
          ),
          _react3.default.createElement(
            _reactNativeMaterialCards.Card,
            {
              style: styles.serviceCard,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 51
              }
            },
            _react3.default.createElement(_reactNativeMaterialCards.CardContent, {
              text: "Your device will reboot in few seconds once successful, be patient meanwhile",
              __source: {
                fileName: _jsxFileName,
                lineNumber: 52
              }
            }),
            _react3.default.createElement(
              _reactNativeMaterialCards.CardAction,
              {
                separator: true,
                inColumn: false,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 53
                }
              },
              _react3.default.createElement(_reactNativeMaterialCards.CardButton, {
                onPress: function onPress() {},
                title: "Push",
                color: "blue",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 56
                }
              }),
              _react3.default.createElement(_reactNativeMaterialCards.CardButton, {
                onPress: function onPress() {},
                title: "Later",
                color: "blue",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 61
                }
              })
            )
          )
        );
      }
    }]);

    return Services;
  }(_react3.default.Component));

  exports.default = Services;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#da5353',
      alignItems: 'center',
      justifyContent: 'center'
    },
    alignRight: {
      marginTop: 20,
      marginRight: 60,
      alignSelf: 'flex-end'
    },
    welcome: {
      marginBottom: 20
    },
    textinput: {
      height: 40,
      width: 250
    },
    button: {
      color: "#3496f0",
      margin: 20
    },
    slide: {},
    serviceCard: {
      height: 60
    }
  });
});